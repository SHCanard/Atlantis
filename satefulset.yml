apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: atlantis
spec:
  serviceName: atlantis
  replicas: 1
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      partition: 0
  selector:
    matchLabels:
      app.kubernetes.io/name: atlantis
  template:
    metadata:
      labels:
        app.kubernetes.io/name: atlantis
    spec:
      securityContext:
        fsGroup: 1000 # Atlantis group (1000) read/write access to volumes.
      volumes:
      - name: root-ca
        secret:
          secretName: root-ca
          items:
          - key: ca-certificates.crt
            path: ca-certificates.crt
          defaultMode: 420
      containers:
      - name: atlantis
        image: ghcr.io/runatlantis/atlantis:latest # 1. Replace <VERSION> with the most recent release.
        env:
        - name: ATLANTIS_REPO_ALLOWLIST
          value: gitlab.domain.com/terraform/deployments/* # 2. Replace this with your own repo allowlist.
        - name: ATLANTIS_GITLAB_HOSTNAME
          value: git.domain.com
        ### GitLab Config ###
        - name: ATLANTIS_GITLAB_USER
          value: atlantis_bot # 4i. If you're using GitLab replace <YOUR_GITLAB_USER> with the username of your Atlantis GitLab user without the `@`.
        - name: ATLANTIS_GITLAB_TOKEN
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: token
        - name: NO_PROXY
          valueFrom:
            secretKeyRef:
              name: proxy-secret
              key: NO-PROXY
        - name: PROXY-USER
          valueFrom:
            secretKeyRef:
              name: proxy-secret
              key: PROXY-USER
        - name: PROXY-PASSWORD
          valueFrom:
            secretKeyRef:
              name: proxy-secret
              key: PROXY-PASSWORD
        - name: PROXY-URL
          valueFrom:
            secretKeyRef:
              name: proxy-secret
              key: PROXY-URL
        - name: HTTP_PROXY
          value: http://$(PROXY-USER):$(PROXY-PASSWORD)@$(PROXY-URL)
        - name: HTTPS_PROXY
          value: http://$(PROXY-USER):$(PROXY-PASSWORD)@$(PROXY-URL)
        - name: TF_VAR_VMW_USERNAME
          valueFrom:
            secretKeyRef:
              name: vmware-secret
              key: USERNAME
        - name: TF_VAR_VMW_PASSWORD
          valueFrom:
            secretKeyRef:
              name: vmware-secret
              key: PASSWORD
        - name: ATLANTIS_GITLAB_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: webhook-secret
        - name: TF_HTTP_PASSWORD
          valueFrom:
            secretKeyRef:
              name: atlantis-vcs
              key: token
        - name: TF_HTTP_USERNAME
          value: atlantis_bot
        - name: TF_HTTP_LOCK_METHOD
          value: POST
        - name: TF_HTTP_UNLOCK_METHOD
          value: DELETE
        - name: TF_HTTP_RETRY_WAIT_MIN
          value: "5"
        ### End GitLab Config ###
       
        - name: ATLANTIS_DATA_DIR
          value: /atlantis
        - name: ATLANTIS_PORT
          value: "4141" # Kubernetes sets an ATLANTIS_PORT variable so we need to override.
        volumeMounts:
        - name: atlantis-data
          mountPath: /atlantis
        - name: root-ca
          mountPath: /etc/ssl/certs
          readOnly: true
        ports:
        - name: atlantis
          containerPort: 4141
        resources:
          requests:
            memory: 256Mi
            cpu: 100m
          limits:
            memory: 256Mi
            cpu: 100m
        livenessProbe:
          # We only need to check every 60s since Atlantis is not a
          # high-throughput service.
          periodSeconds: 60
          httpGet:
            path: /healthz
            port: 4141
            # If using https, change this to HTTPS
            scheme: HTTP
        readinessProbe:
          periodSeconds: 60
          httpGet:
            path: /healthz
            port: 4141
            # If using https, change this to HTTPS
            scheme: HTTP
  volumeClaimTemplates:
  - metadata:
      name: atlantis-data
    spec:
      accessModes: ["ReadWriteOnce"] # Volume should not be shared by multiple nodes.
      resources:
        requests:
          # The biggest thing Atlantis stores is the Git repo when it checks it out.
          # It deletes the repo after the pull request is merged.
          storage: 5Gi
